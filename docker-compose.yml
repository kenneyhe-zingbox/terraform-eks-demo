version: '2'
# https://dev.to/mozartted/docker-networking--how-to-connect-multiple-containers-7fl
# export for any build:
# export BNUM=ops001.cloud.zingbox.com:5000/zc-daily/service:v0.3_2657
# export FNUM=ops001.cloud.zingbox.com:5000/zc-daily/frontend:1841
# deploy to any host:
# terraform plan   -var-file=/Users/Shared/proj/jlee/redis/terraform.tfmine -target=null_resource.docker-compose -target=null_resource.docker-compose[5] -refresh=true    -out  planfile
services:
  zc-auth:
    image: ${BNUM}
    hostname: zcauth
    environment:
      - NODE_ENV=testing
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=8.11.1
      - YARN_VERSION=1.5.1
    restart: always
#    volumes:
#      - config:/usr/src/app/config
    command: ['forever', '-a', '-o', '/www/log', '-e', '/www/log', '-c', 'node --harmony', 'zcserver.js', 'auth', '-t', '-l',
            '/www', '--NODE_CONFIG={"mongoPoolSize":5}', '-s', '9032' ]

    networks:
      backend:
        # can scale zc-auth yet because it need nginx restart and configuration change
        aliases:
          - zcauth
  zc-api:
    image: ${BNUM}
    hostname: zcapi
    environment:
      - NODE_ENV=testing
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=8.11.1
      - YARN_VERSION=1.5.1
    restart: always
    command: ['forever', '-a', '-o', '/www/log', '-e', '/www/log', '-c', 'node --harmony', 'zcserver.js', 'api', '-t', '-l',
            '/www', '--NODE_CONFIG={"mongoPoolSize":80}', '-s', '9030' ]
    networks:
      backend:
        aliases:
          - zcapi
#    volumes:
#      - config:/usr/src/app/config
  zc-con:
    image: ${BNUM}
    hostname: zccon
    environment:
      - NODE_ENV=testing
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=8.11.1
      - YARN_VERSION=1.5.1
    restart: always
    command: ['forever', '-a', '-o', '/www/log', '-e', '/www/log', '-c', 'node --harmony', 'zcserver.js', 'connector', '-t',
            '-l', '/www', '--ws', '--NODE_CONFIG={"mongoPoolSize":5}', '-s', '9031']
    networks:
      backend:
        aliases:
          - zccon
#    volumes:
#      - config:/usr/src/app/config
  zc-api-proxy:
    image: ${BNUM}
    hostname: zcapiproxy
    environment:
      - NODE_ENV=testing
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=8.11.1
      - YARN_VERSION=1.5.1
    restart: always
    command: ['forever', '-a', '-o', '/www/log', '-e', '/www/log', '-c', 'node --harmony', 'zcserver.js', 'api_proxy', '-t', '-l',
           '/www', '--NODE_CONFIG={"mongoPoolSize":5}', '-s', '9033']
    networks:
      backend:
        aliases:
          - zcapiproxy
#    volumes:
#      - config:/usr/src/app/config
  nginxhttps:
    image: ops001.cloud.zingbox.com:5000/nginx:0.7
    hostname: tnginx
    build:
      context: .
      dockerfile: Dockerfile
      args:
        fnum: ${FNUM}
    restart: always
    environment:
      - NODE_ENV=testing
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=8.11.1
      - YARN_VERSION=1.5.1
    ports:
      - "443:443"
    depends_on:
      - zc-auth
      - zc-api-proxy
      - zc-api
      - zc-con
    networks:
      backend:
        aliases:
          - tnginx
    volumes:
      - /tmp:/tmp
networks:
  backend:
