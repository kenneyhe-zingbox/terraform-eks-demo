# You may add here your
# server {
#        ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

upstream api_servers {
        server zcapi:9030 max_fails=3 fail_timeout=30;
        # list more instances for connector cluster here...

        # Upstream check settings
        check interval=3000 rise=2 fall=5 timeout=1000 type=http port=9030;
        check_keepalive_requests 100;
        check_http_send "GET /state HTTP/1.1\r\n\r\n";

}

upstream con_servers {
        server zccon:9031 max_fails=3 fail_timeout=30;
        # list more instances for connector cluster here...

        # Upstream check settings
        check interval=3000 rise=2 fall=5 timeout=1000 type=http port=9031;
        check_keepalive_requests 100;
        check_http_send "GET /state HTTP/1.1\r\n\r\n";

}

upstream auth_servers {
        server zcauth:9032 max_fails=3 fail_timeout=30;
        # list more instances for connector cluster here...

        # Upstream check settings
#        check interval=3000 rise=2 fall=5 timeout=1000 type=http port=9032;
#        check_keepalive_requests 100;
#        check_http_send "GET /state HTTP/1.1\r\n\r\n";

}

upstream proxy_servers {
    # list more instances for connector cluster here...
    server zcapiproxy:9033 max_fails=3 fail_timeout=30;

    # Upstream check settings
    keepalive 32;
    check interval=3000 rise=2 fall=5 timeout=1000 type=http port=9033;
    check_keepalive_requests 100;
    check_http_send "GET /state HTTP/1.1\r\n\r\n";

}


#upstream fe_servers {
#        server localhost:9090 max_fails=3 fail_timeout=30;
#        # list more instances for connector cluster here...
#
#        # Upstream check settings
#        check interval=3000 rise=2 fall=5 timeout=1000 type=http port=9090;
#        check_keepalive_requests 100;
#        check_http_send "GET /status HTTP/1.0\r\n\r\n";
#
#}

server {
    listen      80;
    server_name     enterprise.zingbox.com;
    return      301 https://$host$request_uri;
}

server {
#        listen 80 default_server;
#        listen [::]:80 default_server ipv6only=on;
        #listen 80;

        listen 443 ssl;
        #index index.html index.htm;

        # Make site accessible from http://localhost/
        server_name localhost;
        # ssl_certificate /etc/letsencrypt/live/dev008.cloud.zingbox.com/cert.pem;
        # ssl_certificate_key /etc/letsencrypt/live/dev008.cloud.zingbox.com/privkey.pem;
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

     #   ssl_certificate /etc/letsencrypt/archive/dev008.cloud.zingbox.com/cert1.pem;
     #   ssl_certificate_key /etc/letsencrypt/archive/dev008.cloud.zingbox.com/privkey1.pem;

        root /usr/local/nginx/html;
   

        rewrite ^/search.* / last;
        rewrite ^/monitor.* / last;
        rewrite ^/alerts.* / last;
        rewrite ^/useraccounts.* / last;
        rewrite ^/tenantaccounts.* / last;
        rewrite ^/detail.* / last;
        rewrite ^/login.* / last;
        rewrite ^/register.* / last;
        rewrite ^/administration.* / last;
        rewrite ^/protocol.* / last;
       # rewrite ^/policiesalerts.* / last;

        # onboarding FE
        rewrite ^/request_tryout / last;
        rewrite ^/register.* / last;

        rewrite ^/requestusers /404 last;
        rewrite ^/adminindex.html /404 last;
        rewrite ^/v0.3/api/onboarding/sendRegisterEmail /404 last;
        rewrite ^/v0.3/api/onboarding/createTenant /404 last;
        rewrite ^/v0.3/api/onboarding/getImageOrder /404 last;
        rewrite ^/v0.3/api/onboarding/tenantImageUrl /404 last;
        rewrite ^/v0.3/api/onboarding/changeTrialUserStatus /404 last;
        rewrite ^/v0.3/api/onboarding/listTrialUsers /404 last;
        rewrite ^/topology.* / last;

        
        location / {
                root   html;
                index  index.html index.htm;
#                proxy_pass http://fe_servers/;
#                proxy_next_upstream     error timeout http_500;
#                proxy_connect_timeout   2;
#                proxy_redirect off;
#                proxy_buffering off;
#                proxy_set_header Host $host;
#                proxy_set_header X-Real-IP $remote_addr;
#                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /404 {
                return 404;
        }

        location /v0.3/con {
                proxy_pass https://zccon:9031/v0.3/con;
                #health_check uri=/status;
                proxy_next_upstream     error timeout http_500;
                proxy_connect_timeout   2;
                proxy_redirect off;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v0.3/zauth {
                proxy_pass https://zcauth:9032/v0.3/zauth;
                #proxy_pass http://auth_servers/v0.3/zauth;
                #health_check uri=/status;
                proxy_next_upstream     error timeout http_500;
                proxy_connect_timeout   2;
                proxy_redirect off;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v0.3/api { # New routing for API
                proxy_pass https://zcapi:9030/v0.3/api;
                #health_check uri=/status;
                proxy_next_upstream     error timeout http_500;
                proxy_connect_timeout   2;
                proxy_redirect off;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /wss/connect {
                proxy_pass https://zccon:9031/wss/connect;
                proxy_next_upstream     error timeout http_500;
                proxy_connect_timeout   2;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
        }

    location /v0.3/proxy { # New routing for API
        proxy_pass https://zcapiproxy:9033/v0.3/proxy;
        #health_check uri=/status;
        proxy_next_upstream     error timeout;
        proxy_http_version      1.1;
        proxy_set_header        Connection "";
        proxy_connect_timeout   2;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cookie_path / "/; secure; HttpOnly";
    }
 
        location /svc_status {
                stub_status on;
                access_log off;
        }

        location /status {
                check_status;
                access_log off;
        }

        location /state {
                alias /usr/local/nginx/html/state;
                access_log off;
        }
}
